npx create-react-app amazon-clone

cd amazon-clone

npm install -g firebase-tools

npm start

npm install react-router-dom

npm install @material-ui/core

npm install @material-ui/icons

npm i react-currency-format

npm i firebase

after this 
 
npm start

20:17 firebase console > authentication > signin method > email password > enable > click save


href refresh the page and link doesnt refresh the page

contextAPi is used to store the data in a single place
  
useReducer hook is used to get the initial state of the basket and to bring the functionality of the reducer

reducer is used to provide 'action' and 'state' to our components for eg in the navbar component it provides the action of adding and removing items on the basket

in product.js when we click toaddToBasket we dispatches an action ( fire an object ) and then we listen to that action in the reducer


in product.js:
 dispatch({
      type: "ADD_TO_BASKET",


in reducer.js:
const reducer = (state, action) => {
  switch (action.type) {
      case "ADD_TO_BASKET":
      return {
        ...state,
        basket: [...state.basket, action.item],
      };




-------------------------

in reducer.js:-

export const getBasketTotal = (basket) =>
  basket?.reduce((amount, item) => item.price + amount, 0);
{
  /* selector */
}  

we use reduce to calculate the total price in a single function

in subtotal.js:-  value={getBasketTotal(basket)}

------------------------

in firebase.js:

export { auth }; //auth module is for login and logout

-----------------------

in login.js:-

    auth
      .signInWithEmailAndPassword(email, password)
      .then((auth) => {
        history.push("/"); //here we login and redirect to homepage
      })


history is used to redirect the user to homepage after login

----------------------------

in app.js:- 

useEffect run once when something changes in the data layer

here we are calling a listener in useEffect who will listen all the time when the user sign in or singout

  useEffect(() => {
    const unsubscribe = auth.onAuthStateChanged((authUser) => {
      if (authUser) {
        // the user is logged in
        dispatch({
          type: "SET_USER",
          user: authUser,
        });
      } else {
        // the user is logged out
        dispatch({
          type: "SET_USER",
          user: null,
        });
      }
    });
    // cleanup
    return () => {
      unsubscribe();
    };
  }, []); //by using [] empty brackets it runs only once


----------------------

in reducer.js

    case "SET_USER":
      return {
        ...state,
        user: action.user,
      };

it updates user when it login (user is authenticated) and logout (user is null)

-----------------


after completing the project 
goto the right folder
run

firebase login

firebase init

select hosting press spacebar and then enter

select existing prject : amazon-clone

in public directory write : build

for single page app : Y
y
Firebase initizalization complete 

now run

npm run build

firebase deploy
